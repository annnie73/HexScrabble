import pygame

kopia_planszy = {(-8, 8): [' ',  (239, 50, 43, 50) ], (-7, 8): [' ',  (284, 50, 43, 50) ], (-6, 8): [' ',  (329, 50, 43, 50) ], (-5, 8): [' ',  (374, 50, 43, 50) ], (-4, 8): [' ',  (419, 50, 43, 50) ], (-3, 8): [' ',  (464, 50, 43, 50) ], (-2, 8): [' ',  (509, 50, 43, 50) ], (-1, 8): [' ',  (554, 50, 43, 50) ], (0, 8): [' ',  (599, 50, 43, 50) ], (-8, 7): [' ',  (216, 89, 43, 50) ], (-7, 7): [' ',  (261, 89, 43, 50) ], (-6, 7): [' ',  (306, 89, 43, 50) ], (-5, 7): [' ',  (351, 89, 43, 50) ], (-4, 7): [' ',  (396, 89, 43, 50) ], (-3, 7): [' ',  (441, 89, 43, 50) ], (-2, 7): [' ',  (486, 89, 43, 50) ], (-1, 7): [' ',  (531, 89, 43, 50) ], (0, 7): [' ',  (576, 89, 43, 50) ], (1, 7): [' ',  (621, 89, 43, 50) ], (-8, 6): [' ',  (194, 128, 43, 50) ], (-7, 6): [' ',  (239, 128, 43, 50) ], (-6, 6): [' ',  (284, 128, 43, 50) ], (-5, 6): [' ',  (329, 128, 43, 50) ], (-4, 6): [' ',  (374, 128, 43, 50) ], (-3, 6): [' ',  (419, 128, 43, 50) ], (-2, 6): [' ',  (464, 128, 43, 50) ], (-1, 6): [' ',  (509, 128, 43, 50) ], (0, 6): [' ',  (554, 128, 43, 50) ], (1, 6): [' ',  (599, 128, 43, 50) ], (2, 6): [' ',  (644, 128, 43, 50) ], (-8, 5): [' ',  (171, 168, 43, 50) ], (-7, 5): [' ',  (216, 168, 43, 50) ], (-6, 5): [' ',  (261, 168, 43, 50) ], (-5, 5): [' ',  (306, 168, 43, 50) ], (-4, 5): [' ',  (351, 168, 43, 50) ], (-3, 5): [' ',  (396, 168, 43, 50) ], (-2, 5): [' ',  (441, 168, 43, 50) ], (-1, 5): [' ',  (486, 168, 43, 50) ], (0, 5): [' ',  (531, 168, 43, 50) ], (1, 5): [' ',  (576, 168, 43, 50) ], (2, 5): [' ',  (621, 168, 43, 50) ], (3, 5): [' ',  (666, 168, 43, 50) ], (-8, 4): [' ',  (149, 207, 43, 50) ], (-7, 4): [' ',  (194, 207, 43, 50) ], (-6, 4): [' ',  (239, 207, 43, 50) ], (-5, 4): [' ',  (284, 207, 43, 50) ], (-4, 4): [' ',  (329, 207, 43, 50) ], (-3, 4): [' ',  (374, 207, 43, 50) ], (-2, 4): [' ',  (419, 207, 43, 50) ], (-1, 4): [' ',  (464, 207, 43, 50) ], (0, 4): [' ',  (509, 207, 43, 50) ], (1, 4): [' ',  (554, 207, 43, 50) ], (2, 4): [' ',  (599, 207, 43, 50) ], (3, 4): [' ',  (644, 207, 43, 50) ], (4, 4): [' ',  (689, 207, 43, 50) ], (-8, 3): [' ',  (126, 247, 43, 50) ], (-7, 3): [' ',  (171, 247, 43, 50) ], (-6, 3): [' ',  (216, 247, 43, 50) ], (-5, 3): [' ',  (261, 247, 43, 50) ], (-4, 3): [' ',  (306, 247, 43, 50) ], (-3, 3): [' ',  (351, 247, 43, 50) ], (-2, 3): [' ',  (396, 247, 43, 50) ], (-1, 3): [' ',  (441, 247, 43, 50) ], (0, 3): [' ',  (486, 247, 43, 50) ], (1, 3): [' ',  (531, 247, 43, 50) ], (2, 3): [' ',  (576, 247, 43, 50) ], (3, 3): [' ',  (621, 247, 43, 50) ], (4, 3): [' ',  (666, 247, 43, 50) ], (5, 3): [' ',  (711, 247, 43, 50) ], (-8, 2): [' ',  (104, 286, 43, 50) ], (-7, 2): [' ',  (149, 286, 43, 50) ], (-6, 2): [' ',  (194, 286, 43, 50) ], (-5, 2): [' ',  (239, 286, 43, 50) ], (-4, 2): [' ',  (284, 286, 43, 50) ], (-3, 2): [' ',  (329, 286, 43, 50) ], (-2, 2): [' ',  (374, 286, 43, 50) ], (-1, 2): [' ',  (419, 286, 43, 50) ], (0, 2): [' ',  (464, 286, 43, 50) ], (1, 2): [' ',  (509, 286, 43, 50) ], (2, 2): [' ',  (554, 286, 43, 50) ], (3, 2): [' ',  (599, 286, 43, 50) ], (4, 2): [' ',  (644, 286, 43, 50) ], (5, 2): [' ',  (689, 286, 43, 50) ], (6, 2): [' ',  (734, 286, 43, 50) ], (-8, 1): [' ',  (81, 325, 43, 50) ], (-7, 1): [' ',  (126, 325, 43, 50) ], (-6, 1): [' ',  (171, 325, 43, 50) ], (-5, 1): [' ',  (216, 325, 43, 50) ], (-4, 1): [' ',  (261, 325, 43, 50) ], (-3, 1): [' ',  (306, 325, 43, 50) ], (-2, 1): [' ',  (351, 325, 43, 50) ], (-1, 1): [' ',  (396, 325, 43, 50) ], (0, 1): [' ',  (441, 325, 43, 50) ], (1, 1): [' ',  (486, 325, 43, 50) ], (2, 1): [' ',  (531, 325, 43, 50) ], (3, 1): [' ',  (576, 325, 43, 50) ], (4, 1): [' ',  (621, 325, 43, 50) ], (5, 1): [' ',  (666, 325, 43, 50) ], (6, 1): [' ',  (711, 325, 43, 50) ], (7, 1): [' ',  (756, 325, 43, 50) ], (-8, 0): [' ',  (59, 365, 43, 50) ], (-7, 0): [' ',  (104, 365, 43, 50) ], (-6, 0): [' ',  (149, 365, 43, 50) ], (-5, 0): [' ',  (194, 365, 43, 50) ], (-4, 0): [' ',  (239, 365, 43, 50) ], (-3, 0): [' ',  (284, 365, 43, 50) ], (-2, 0): [' ',  (329, 365, 43, 50) ], (-1, 0): ['B',  (374, 365, 43, 50) ], (0, 0): ['U',  (419, 365, 43, 50) ], (1, 0): ['Z', (464, 365, 43, 50) ], (2, 0): ['I',  (509, 365, 43, 50) ], (3, 0): [' ',  (554, 365, 43, 50) ], (4, 0): [' ',  (599, 365, 43, 50) ], (5, 0): [' ',  (644, 365, 43, 50) ], (6, 0): [' ',  (689, 365, 43, 50) ], (7, 0): [' ',  (734, 365, 43, 50) ], (8, 0): [' ',  (779, 365, 43, 50) ], (-7, -1): [' ',  (81, 404, 43, 50) ], (-6, -1): [' ',  (126, 404, 43, 50) ], (-5, -1): [' ',  (171, 404, 43, 50) ], (-4, -1): [' ',  (216, 404, 43, 50) ], (-3, -1): [' ',  (261, 404, 43, 50) ], (-2, -1): [' ',  (306, 404, 43, 50) ], (-1, -1): [' ',  (351, 404, 43, 50) ], (0, -1): [' ',  (396, 404, 43, 50) ], (1, -1): [' ',  (441, 404, 43, 50) ], (2, -1): [' ',  (486, 404, 43, 50) ], (3, -1): [' ',  (531, 404, 43, 50) ], (4, -1): [' ',  (576, 404, 43, 50) ], (5, -1): [' ',  (621, 404, 43, 50) ], (6, -1): [' ',  (666, 404, 43, 50) ], (7, -1): [' ',  (711, 404, 43, 50) ], (8, -1): [' ',  (756, 404, 43, 50) ], (-6, -2): [' ',  (104, 444, 43, 50) ], (-5, -2): [' ',  (149, 444, 43, 50) ], (-4, -2): [' ',  (194, 444, 43, 50) ], (-3, -2): [' ',  (239, 444, 43, 50) ], (-2, -2): [' ',  (284, 444, 43, 50) ], (-1, -2): [' ',  (329, 444, 43, 50) ], (0, -2): [' ',  (374, 444, 43, 50) ], (1, -2): [' ',  (419, 444, 43, 50) ], (2, -2): [' ',  (464, 444, 43, 50) ], (3, -2): [' ',  (509, 444, 43, 50) ], (4, -2): [' ',  (554, 444, 43, 50) ], (5, -2): [' ',  (599, 444, 43, 50) ], (6, -2): [' ',  (644, 444, 43, 50) ], (7, -2): [' ',  (689, 444, 43, 50) ], (8, -2): [' ',  (734, 444, 43, 50) ], (-5, -3): [' ',  (126, 483, 43, 50) ], (-4, -3): [' ',  (171, 483, 43, 50) ], (-3, -3): [' ',  (216, 483, 43, 50) ], (-2, -3): [' ',  (261, 483, 43, 50) ], (-1, -3): [' ',  (306, 483, 43, 50) ], (0, -3): [' ',  (351, 483, 43, 50) ], (1, -3): [' ',  (396, 483, 43, 50) ], (2, -3): [' ',  (441, 483, 43, 50) ], (3, -3): [' ',  (486, 483, 43, 50) ], (4, -3): [' ',  (531, 483, 43, 50) ], (5, -3): [' ',  (576, 483, 43, 50) ], (6, -3): [' ',  (621, 483, 43, 50) ], (7, -3): [' ',  (666, 483, 43, 50) ], (8, -3): [' ',  (711, 483, 43, 50) ], (-4, -4): [' ',  (149, 522, 43, 50) ], (-3, -4): [' ',  (194, 522, 43, 50) ], (-2, -4): [' ',  (239, 522, 43, 50) ], (-1, -4): [' ',  (284, 522, 43, 50) ], (0, -4): [' ',  (329, 522, 43, 50) ], (1, -4): [' ',  (374, 522, 43, 50) ], (2, -4): [' ',  (419, 522, 43, 50) ], (3, -4): [' ',  (464, 522, 43, 50) ], (4, -4): [' ',  (509, 522, 43, 50) ], (5, -4): [' ',  (554, 522, 43, 50) ], (6, -4): [' ',  (599, 522, 43, 50) ], (7, -4): [' ',  (644, 522, 43, 50) ], (8, -4): [' ',  (689, 522, 43, 50) ], (-3, -5): [' ',  (171, 562, 43, 50) ], (-2, -5): [' ',  (216, 562, 43, 50) ], (-1, -5): [' ',  (261, 562, 43, 50) ], (0, -5): [' ',  (306, 562, 43, 50) ], (1, -5): [' ',  (351, 562, 43, 50) ], (2, -5): [' ',  (396, 562, 43, 50) ], (3, -5): [' ',  (441, 562, 43, 50) ], (4, -5): [' ',  (486, 562, 43, 50) ], (5, -5): [' ',  (531, 562, 43, 50) ], (6, -5): [' ',  (576, 562, 43, 50) ], (7, -5): [' ',  (621, 562, 43, 50) ], (8, -5): [' ',  (666, 562, 43, 50) ], (-2, -6): [' ',  (194, 601, 43, 50) ], (-1, -6): [' ',  (239, 601, 43, 50) ], (0, -6): [' ',  (284, 601, 43, 50) ], (1, -6): [' ',  (329, 601, 43, 50) ], (2, -6): [' ',  (374, 601, 43, 50) ], (3, -6): [' ',  (419, 601, 43, 50) ], (4, -6): [' ',  (464, 601, 43, 50) ], (5, -6): [' ',  (509, 601, 43, 50) ], (6, -6): [' ',  (554, 601, 43, 50) ], (7, -6): [' ',  (599, 601, 43, 50) ], (8, -6): [' ',  (644, 601, 43, 50) ], (-1, -7): [' ',  (216, 641, 43, 50) ], (0, -7): [' ',  (261, 641, 43, 50) ], (1, -7): [' ',  (306, 641, 43, 50) ], (2, -7): [' ',  (351, 641, 43, 50) ], (3, -7): [' ',  (396, 641, 43, 50) ], (4, -7): [' ',  (441, 641, 43, 50) ], (5, -7): [' ',  (486, 641, 43, 50) ], (6, -7): [' ',  (531, 641, 43, 50) ], (7, -7): [' ',  (576, 641, 43, 50) ], (8, -7): [' ',  (621, 641, 43, 50) ], (0, -8): [' ',  (239, 680, 43, 50) ], (1, -8): [' ',  (284, 680, 43, 50) ], (2, -8): [' ',  (329, 680, 43, 50) ], (3, -8): [' ',  (374, 680, 43, 50) ], (4, -8): [' ',  (419, 680, 43, 50) ], (5, -8): [' ',  (464, 680, 43, 50) ], (6, -8): [' ',  (509, 680, 43, 50) ], (7, -8): [' ',  (554, 680, 43, 50) ], (8, -8): [' ',  (599, 680, 43, 50) ]}


def sprawdź_wstecz_p(x,y, słowo):
	global kopia_planszy

	if kopia_planszy[(x-1, y)][0] == ' ':
		#musimy jeszcze odwrócić słowo
		return słowo[::-1] #mamy na razie sam początek słowa
	
	słowo += kopia_planszy[(x-1, y)][0]
	return sprawdź_wstecz_p(x-1, y, słowo)
	

print(sprawdź_wstecz_p(3,0,'a'))
